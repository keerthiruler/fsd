3.	Develop a Django app that performs student registration to a course. 
It should also display list of students registered for any selected course. 
Create students and course as models with enrolment as ManyToMany field.

Solution:

django-admin startproject course_registration
cd course_registration
py manage.py startapp registration

registration/models.py 
from django.db import models

class Course(models.Model):
    name = models.CharField(max_length=100)
    description = models.TextField()

    def __str__(self):
        return self.name

class Student(models.Model):
    name = models.CharField(max_length=100)
    email = models.EmailField()
    courses = models.ManyToManyField(Course, related_name='students')

    def __str__(self):
        return self.name

registration/admin.py 
from django.contrib import admin
from .models import Course, Student

admin.site.register(Course)
admin.site.register(Student)

py manage.py check
py manage.py makemigrations
py manage.py migrate

py manage.py shell

>>> from registration.models import Course
>>> p1=Course(name='FSD',description='to create the website')
>>> p1.save()
>>> Course.objects.all()

registration/views.py
from django.shortcuts import render
from .models import Course

def course_list(request):
    courses = Course.objects.all()
    return render(request, 'registration/course_list.html', {'courses': courses})

def register_student(request, course_id):
    course = Course.objects.get(pk=course_id)
    if request.method == 'POST':
        name = request.POST.get('name')
        email = request.POST.get('email')
        student, created = course.students.get_or_create(name=name, email=email)
        if created:
            message = f'{student.name} registered successfully for {course.name}.'
        else:
            message = f'{student.name} is already registered for {course.name}.'
        return render(request, 'registration/registration_confirmation.html', {'message': message})
    return render(request, 'registration/student_registration.html', {'course': course})

Create corresponding HTML templates in registration/templates/registration folder:
•	course_list.html to display the list of courses.
•	student_registration.html for student registration form.
•	registration_confirmation.html for displaying registration confirmation message.

course_list.html
<!DOCTYPE html>
<html>
<head>
    <title>course List</title>
</head>
<body>
    <h1>Available courses:</h1>
    <ul>
        {% for c in courses %}
            <li>{{ c.name }}</li>
        {% endfor %}
    </ul>
</body>
</html>

student_registration.html
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html lang="en">
<head>
    <title>Course Registration</title>
</head>
<body>
    <h1>Course Registration</h1>
    <form action="." method="POST">
        {% csrf_token %}
        <label for="name">Name: </label>
        <input type="text" name="name" value="">
        <label for="email">Email: </label>
        <input type="text" name="email" value="">
        <input type="submit" value="Submit">
    </form>
</body>
</html>

registration_confirmation.html
<!DOCTYPE html>
<html>
<head>
    <title>course List</title>
</head>
<body>
    <h1>Available courses:</h1>
    <ul>
        
            <li>{{ message }}</li>
        
    </ul>
</body>
</html>


registration/urls.py

from django.urls import path
from . import views

urlpatterns = [
    path('', views.course_list, name='course_list'),
    path('register/<int:course_id>/', views.register_student, name='register_student'),
]

urls.py
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('registration.urls')),
]

python manage.py runserver

http://127.0.0.1:8000
http://127.0.0.1:8000/register/1/









